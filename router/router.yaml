apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-files
data:
  nginx.conf: |
    user nginx;
    worker_processes  3;
    error_log  /var/log/nginx/error.log;
    events {
      worker_connections  10240;
    }
    http {
      map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
      }
      

      access_log	/var/log/nginx/access.log;
      server {
          listen 443 http2 ssl;
          listen [::]:443 http2 ssl;
          
          server_name  www.mydomain.com;
          ssl_certificate /etc/cert/cert.pem;
          ssl_certificate_key /etc/cert/key.pem;
          location / {
              root   /html;
              index  index.html index.html;
          }

          location /ws/ {
            add_header Access-Control-Allow-Origin *;
            proxy_set_header        Origin "";
            proxy_set_header        Host $host;
            proxy_set_header        X-Real-IP $remote_addr;
            proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header        X-Forwarded-Proto $scheme;




      # Fix the â€œIt appears that your reverse proxy set up is broken" error.
      proxy_pass          http://localhost:4444;
      proxy_read_timeout  90;




      # WebSocket support
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
          }
      }
      
    }
  index.html: |
    <html>
      <body>
        Hi, there!
      </body>
    </html>
  
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx
spec:
  replicas: 2
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - name: nginx
        image: nginx
        ports:
        - containerPort: 80
        volumeMounts:
        - mountPath: /etc/nginx # mount nginx-conf volumn to /etc/nginx
          readOnly: true
          name: nginx-conf

        - mountPath: /etc/cert
          readOnly: true
          name: nginx-cert

        - mountPath: /var/log/nginx
          name: log

        - mountPath: /html
          name: html
      - name: router
        image: localhost:5000/router
        ports:
        - containerPort: 4444
        env:
        - name: LISTEN_PORT
          value: "4444"
        - name: DST_PORT
          value: "3333"
        - name:  DST_PREFIX
          value: "backend"
        - name: DST_DOMAIN
          value: ".backend-svc.default.svc.cluster.local"

      volumes:
      - name: nginx-conf
        configMap:
          name: nginx-files # place ConfigMap `nginx-conf` on /etc/nginx
          items:
            - key: nginx.conf
              path: nginx.conf
            
      - name: html
        configMap:
          name: nginx-files
          items:
            - key: index.html
              path: index.html
      - name: nginx-cert
        configMap:
          name: nginx-tls
          items:
            - key: tls.crt
              path: cert.pem
            - key: tls.key
              path: key.pem
          

      - name: log
        emptyDir: {}



